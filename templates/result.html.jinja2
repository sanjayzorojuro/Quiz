{% extends 'base.html' %}

{% block title %}JPOT - Quiz Results{% endblock %}

{% block body %}
<style>
    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap');

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
        background: linear-gradient(135deg, #0f172a 0%, #1e293b 50%, #334155 100%);
        background-attachment: fixed;
        min-height: 100vh;
        color: #f8fafc;
        overflow-x: hidden;
    }

    /* Animated background elements */
    .bg-decoration {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
        z-index: 0;
    }

    .floating-shape {
        position: absolute;
        border-radius: 50%;
        background: linear-gradient(135deg, rgba(59, 130, 246, 0.1), rgba(139, 92, 246, 0.1));
        animation: float 6s ease-in-out infinite;
    }

    .shape-1 { width: 120px; height: 120px; top: 15%; left: 8%; animation-delay: 0s; }
    .shape-2 { width: 180px; height: 180px; top: 65%; right: 10%; animation-delay: 3s; }
    .shape-3 { width: 90px; height: 90px; bottom: 15%; left: 15%; animation-delay: 6s; }
    .shape-4 { width: 60px; height: 60px; top: 40%; right: 25%; animation-delay: 1.5s; }

    @keyframes float {
        0%, 100% { transform: translateY(0px) rotate(0deg); }
        50% { transform: translateY(-25px) rotate(180deg); }
    }

    /* Main container */
    .container {
        position: relative;
        z-index: 1;
        max-width: 600px;
        margin: 0 auto;
        padding: 2rem 1rem;
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .result-card {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(20px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 24px;
        padding: 3rem 2.5rem;
        text-align: center;
        position: relative;
        overflow: hidden;
        box-shadow: 
            0 1px 3px rgba(0, 0, 0, 0.05),
            0 20px 60px rgba(0, 0, 0, 0.08),
            0 0 0 1px rgba(255, 255, 255, 0.1);
        animation: fadeInUp 1s ease-out;
        width: 100%;
    }

    @keyframes fadeInUp {
        from { opacity: 0; transform: translateY(30px); }
        to { opacity: 1; transform: translateY(0); }
    }

    .result-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: linear-gradient(90deg, #60a5fa, #a78bfa, #34d399);
        border-radius: 24px 24px 0 0;
    }

    .result-icon {
        font-size: 4rem;
        margin-bottom: 1.5rem;
        animation: bounce 2s infinite;
    }

    .result-icon.excellent { color: #fbbf24; }
    .result-icon.good { color: #34d399; }
    .result-icon.average { color: #60a5fa; }
    .result-icon.needs-improvement { color: #f87171; }

    @keyframes bounce {
        0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
        40% { transform: translateY(-10px); }
        60% { transform: translateY(-5px); }
    }

    .result-title {
        font-size: 2.5rem;
        font-weight: 800;
        background: linear-gradient(135deg, #60a5fa, #a78bfa, #34d399);
        background-clip: text;
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        margin-bottom: 0.5rem;
        letter-spacing: -0.025em;
    }

    .result-subtitle {
        font-size: 1.25rem;
        color: #cbd5e1;
        margin-bottom: 2rem;
        font-weight: 500;
    }

    .score-display {
        background: rgba(59, 130, 246, 0.1);
        border: 1px solid rgba(59, 130, 246, 0.2);
        border-radius: 20px;
        padding: 2rem;
        margin-bottom: 2rem;
        position: relative;
        overflow: hidden;
    }

    .score-number {
        font-size: 4rem;
        font-weight: 800;
        background: linear-gradient(135deg, #60a5fa, #a78bfa);
        background-clip: text;
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        margin-bottom: 0.5rem;
        display: block;
    }

    .score-text {
        color: #94a3b8;
        font-size: 1.125rem;
        margin-bottom: 1rem;
    }

    .percentage-display {
        font-size: 2rem;
        font-weight: 700;
        margin-bottom: 1rem;
    }

    .percentage-display.excellent { color: #fbbf24; }
    .percentage-display.good { color: #34d399; }
    .percentage-display.average { color: #60a5fa; }
    .percentage-display.needs-improvement { color: #f87171; }

    .performance-message {
        padding: 1.5rem;
        border-radius: 12px;
        margin-bottom: 2rem;
        font-weight: 500;
    }

    .performance-message.excellent {
        background: rgba(251, 191, 36, 0.1);
        border: 1px solid rgba(251, 191, 36, 0.3);
        color: #fbbf24;
    }

    .performance-message.good {
        background: rgba(34, 197, 94, 0.1);
        border: 1px solid rgba(34, 197, 94, 0.3);
        color: #34d399;
    }

    .performance-message.average {
        background: rgba(59, 130, 246, 0.1);
        border: 1px solid rgba(59, 130, 246, 0.3);
        color: #60a5fa;
    }

    .performance-message.needs-improvement {
        background: rgba(239, 68, 68, 0.1);
        border: 1px solid rgba(239, 68, 68, 0.3);
        color: #f87171;
    }

    .user-stats {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
        gap: 1rem;
        margin-bottom: 2rem;
    }

    .stat-item {
        background: rgba(255, 255, 255, 0.05);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 12px;
        padding: 1.5rem 1rem;
        text-align: center;
    }

    .stat-number {
        font-size: 1.5rem;
        font-weight: 700;
        background: linear-gradient(135deg, #60a5fa, #a78bfa);
        background-clip: text;
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        display: block;
        margin-bottom: 0.25rem;
    }

    .stat-label {
        color: #94a3b8;
        font-size: 0.875rem;
        font-weight: 500;
    }

    .action-buttons {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .btn {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 1rem 2rem;
        border-radius: 12px;
        font-weight: 600;
        font-size: 1rem;
        text-decoration: none;
        border: none;
        cursor: pointer;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        overflow: hidden;
        justify-content: center;
    }

    .btn::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
        transition: left 0.5s ease;
    }

    .btn:hover::before {
        left: 100%;
    }

    .btn-primary {
        background: linear-gradient(135deg, #3b82f6, #1d4ed8);
        color: white;
        box-shadow: 0 8px 30px rgba(59, 130, 246, 0.3);
    }

    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 12px 40px rgba(59, 130, 246, 0.4);
    }

    .btn-secondary {
        background: rgba(248, 250, 252, 0.1);
        color: #f8fafc;
        border: 2px solid rgba(248, 250, 252, 0.2);
        backdrop-filter: blur(10px);
    }

    .btn-secondary:hover {
        background: rgba(248, 250, 252, 0.15);
        border-color: rgba(248, 250, 252, 0.3);
        transform: translateY(-2px);
    }

    .btn-accent {
        background: linear-gradient(135deg, #34d399, #10b981);
        color: white;
        box-shadow: 0 8px 30px rgba(52, 211, 153, 0.3);
    }

    .btn-accent:hover {
        transform: translateY(-2px);
        box-shadow: 0 12px 40px rgba(52, 211, 153, 0.4);
    }

    .confetti {
        position: absolute;
        width: 10px;
        height: 10px;
        background: #fbbf24;
        animation: confetti-fall 3s linear infinite;
    }

    @keyframes confetti-fall {
        0% { transform: translateY(-100vh) rotate(0deg); opacity: 1; }
        100% { transform: translateY(100vh) rotate(720deg); opacity: 0; }
    }

    @media (max-width: 640px) {
        .container {
            padding: 1rem;
        }

        .result-card {
            padding: 2rem 1.5rem;
        }

        .result-title {
            font-size: 2rem;
        }

        .result-icon {
            font-size: 3rem;
        }

        .score-number {
            font-size: 3rem;
        }

        .percentage-display {
            font-size: 1.5rem;
        }

        .action-buttons {
            gap: 0.75rem;
        }
    }

    @media (prefers-reduced-motion: reduce) {
        * {
            animation-duration: 0.01ms !important;
            animation-iteration-count: 1 !important;
            transition-duration: 0.01ms !important;
        }
    }
</style>

<div class="bg-decoration">
    <div class="floating-shape shape-1"></div>
    <div class="floating-shape shape-2"></div>
    <div class="floating-shape shape-3"></div>
    <div class="floating-shape shape-4"></div>
</div>

<div class="container">
    <div class="result-card">
        {% set performance_class = 'excellent' if percentage >= 80 else 'good' if percentage >= 60 else 'average' if percentage >= 40 else 'needs-improvement' %}
        
        <div class="result-icon {{ performance_class }}">
            {% if percentage >= 80 %}
            {% elif percentage >= 60 %}
            {% elif percentage >= 40 %}
            {% else %}
            {% endif %}
        </div>
        
        <h1 class="result-title">Quiz Complete!</h1>
        <p class="result-subtitle">Great job, {{ username }}!</p>

        <div class="score-display">
            <div class="score-number">{{ score }}</div>
            <div class="score-text">out of {{ total }} questions correct</div>
            <div class="percentage-display {{ performance_class }}">{{ "%.1f"|format(percentage) }}%</div>
        </div>

        <div class="performance-message {{ performance_class }}">
            {% if percentage >= 80 %}
                Outstanding performance! You're a true quiz master!
            {% elif percentage >= 60 %}
                 Well done! You have good knowledge across various topics.
            {% elif percentage >= 40 %}
                 Not bad! Keep learning and you'll improve even more.
            {% else %}
                 Every expert was once a beginner. Keep practicing!
            {% endif %}
        </div>

        <div class="user-stats">
            <div class="stat-item">
                <div class="stat-number">{{ score }}</div>
                <div class="stat-label">Correct</div>
            </div>
            <div class="stat-item">
                <div class="stat-number">{{ total - score }}</div>
                <div class="stat-label">Incorrect</div>
            </div>
            <div class="stat-item">
                <div class="stat-number">{{ "%.1f"|format(percentage) }}%</div>
                <div class="stat-label">Accuracy</div>
            </div>
        </div>

        <div class="action-buttons">
            <a href="{{ url_for('quiz') }}" class="btn btn-primary">
                 Take Another Quiz
            </a>
            <a href="{{ url_for('leaderboard') }}" class="btn btn-accent">
                 View Leaderboard
            </a>
            <a href="{{ url_for('home') }}" class="btn btn-secondary">
                 Back to Home
            </a>
        </div>
    </div>
</div>

<script>
// Fix 1: Safely get template variables with proper fallbacks
let percentage, score, total;

try {
    percentage = {% if percentage is defined and percentage is not none %}{{ percentage }}{% else %}0{% endif %};
    score = {% if score is defined and score is not none %}{{ score }}{% else %}0{% endif %};
    total = {% if total is defined and total is not none %}{{ total }}{% else %}1{% endif %};
} catch(e) {
    console.error('Error parsing template variables:', e);
    percentage = 0;
    score = 0;
    total = 1;
}

// Add celebration effects for high scores
if (percentage >= 80) {
    function createConfetti() {
        const colors = ['#fbbf24', '#34d399', '#60a5fa', '#a78bfa', '#f87171'];
        for (let i = 0; i < 50; i++) {
            setTimeout(() => {
                const confetti = document.createElement('div');
                confetti.className = 'confetti';
                confetti.style.left = Math.random() * 100 + '%';
                confetti.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];
                confetti.style.animationDelay = Math.random() * 3 + 's';
                
                const bgDecoration = document.querySelector('.bg-decoration');
                if (bgDecoration) {
                    bgDecoration.appendChild(confetti);
                    
                    setTimeout(() => {
                        if (confetti.parentNode) {
                            confetti.remove();
                        }
                    }, 3000);
                }
            }, i * 50);
        }
    }
    
    // Start confetti animation
    setTimeout(createConfetti, 500);
}

// Add sound effect simulation (visual feedback)
function celebrateScore() {
    const card = document.querySelector('.result-card');
    if (card) {
        card.style.transform = 'scale(1.02)';
        card.style.transition = 'transform 0.2s ease';
        setTimeout(() => {
            card.style.transform = 'scale(1)';
        }, 200);
    }
}

// Animate score counting up
function animateScore() {
    const scoreElement = document.querySelector('.score-number');
    if (!scoreElement || score <= 0) return;
    
    const targetScore = score;
    let currentScore = 0;
    const increment = Math.max(1, Math.floor(targetScore / 20));
    
    const timer = setInterval(() => {
        currentScore += increment;
        if (currentScore >= targetScore) {
            currentScore = targetScore;
            clearInterval(timer);
            celebrateScore();
        }
        scoreElement.textContent = currentScore;
    }, 50);
}

// Start animations when page loads
document.addEventListener('DOMContentLoaded', function() {
    setTimeout(animateScore, 500);
});

// Share result functionality
function shareResult() {
    const text = 'I just scored ' + score + '/' + total + ' (' + percentage.toFixed(1) + '%) on JPOT Quiz! 🧠';
    if (navigator.share) {
        navigator.share({
            title: 'My JPOT Quiz Result',
            text: text,
            url: window.location.origin
        }).catch(err => console.log('Error sharing:', err));
    } else {
        // Fallback - copy to clipboard
        if (navigator.clipboard) {
            navigator.clipboard.writeText(text).then(() => {
                alert('Result copied to clipboard!');
            }).catch(err => {
                console.log('Failed to copy:', err);
                // Fallback for older browsers
                fallbackCopyTextToClipboard(text);
            });
        } else {
            fallbackCopyTextToClipboard(text);
        }
    }
}

function fallbackCopyTextToClipboard(text) {
    const textArea = document.createElement("textarea");
    textArea.value = text;
    document.body.appendChild(textArea);
    textArea.focus();
    textArea.select();
    try {
        document.execCommand('copy');
        alert('Result copied to clipboard!');
    } catch (err) {
        console.error('Fallback: Unable to copy', err);
    }
    document.body.removeChild(textArea);
}

// Add keyboard shortcuts
document.addEventListener('keydown', (e) => {
    // Prevent shortcuts when user is typing in an input
    if (e.target.tagName === 'INPUT' || e.target.tagName === 'TEXTAREA') return;
    
    switch(e.key.toLowerCase()) {
        case 'r':
            if (!e.ctrlKey && !e.metaKey) {
                e.preventDefault();
                window.location.href = "{{ url_for('quiz') }}";
            }
            break;
        case 'l':
            if (!e.ctrlKey && !e.metaKey) {
                e.preventDefault();
                window.location.href = "{{ url_for('leaderboard') }}";
            }
            break;
        case 'h':
            if (!e.ctrlKey && !e.metaKey) {
                e.preventDefault();
                window.location.href = "{{ url_for('home') }}";
            }
            break;
    }
});
</script>

{% endblock %}
