{% extends 'base.html' %}

{% block title %}JPOT - Question {{ question_number }}{% endblock %}

{% block body %}
<style>
    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');

    body {
        background: linear-gradient(135deg, #0f172a 0%, #1e293b 50%, #334155 100%);
        background-attachment: fixed;
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
        margin: 0;
        padding: 0;
        min-height: 100vh;
        color: #f8fafc;
    }

    .quiz-container {
        max-width: 720px;
        margin: 0 auto;
        padding: 2rem 1rem;
    }

    .quiz-card {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(20px);
        border-radius: 24px;
        padding: 3rem 2.5rem;
        box-shadow: 
            0 1px 3px rgba(0, 0, 0, 0.05),
            0 20px 60px rgba(0, 0, 0, 0.08),
            0 0 0 1px rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        position: relative;
        overflow: hidden;
    }

    .quiz-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: linear-gradient(90deg, #60a5fa, #a78bfa, #34d399);
        border-radius: 24px 24px 0 0;
    }

    .quiz-header {
        text-align: center;
        margin-bottom: 2.5rem;
    }

    .quiz-title {
        font-size: 2rem;
        font-weight: 700;
        color: #f1f5f9;
        margin: 0 0 0.5rem 0;
        letter-spacing: -0.025em;
    }

    .quiz-subtitle {
        font-size: 1rem;
        color: #94a3b8;
        margin: 0;
        font-weight: 400;
    }

    .category-badge {
        display: inline-block;
        background: rgba(34, 197, 94, 0.2);
        color: #22c55e;
        border: 1px solid rgba(34, 197, 94, 0.3);
        border-radius: 20px;
        padding: 0.25rem 0.75rem;
        font-size: 0.75rem;
        font-weight: 600;
        margin-top: 0.5rem;
    }

    .difficulty-badge {
        display: inline-block;
        border-radius: 20px;
        padding: 0.25rem 0.75rem;
        font-size: 0.75rem;
        font-weight: 600;
        margin-left: 0.5rem;
    }

    .difficulty-easy {
        background: rgba(34, 197, 94, 0.2);
        color: #22c55e;
        border: 1px solid rgba(34, 197, 94, 0.3);
    }

    .difficulty-medium {
        background: rgba(251, 191, 36, 0.2);
        color: #fbbf24;
        border: 1px solid rgba(251, 191, 36, 0.3);
    }

    .difficulty-hard {
        background: rgba(239, 68, 68, 0.2);
        color: #ef4444;
        border: 1px solid rgba(239, 68, 68, 0.3);
    }

    .question-section {
        margin-bottom: 2.5rem;
    }

    .question-number {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        width: 28px;
        height: 28px;
        background: linear-gradient(135deg, #60a5fa, #a78bfa);
        color: white;
        border-radius: 50%;
        font-size: 0.875rem;
        font-weight: 600;
        margin-right: 0.75rem;
    }

    .question-text {
        font-size: 1.25rem;
        font-weight: 600;
        color: #f1f5f9;
        margin-bottom: 1.5rem;
        display: flex;
        align-items: flex-start;
        line-height: 1.5;
    }

    .options-grid {
        display: grid;
        gap: 0.75rem;
    }

    .option-wrapper {
        position: relative;
    }

    .option-input {
        position: absolute;
        opacity: 0;
        pointer-events: none;
    }

    .option-label {
        display: flex;
        align-items: center;
        padding: 1rem 1.25rem;
        background: rgba(255, 255, 255, 0.05);
        border: 2px solid rgba(255, 255, 255, 0.1);
        border-radius: 16px;
        cursor: pointer;
        transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
        font-size: 1rem;
        font-weight: 500;
        color: #cbd5e1;
        position: relative;
        overflow: hidden;
    }

    .option-label::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(139, 92, 246, 0.1), transparent);
        transition: left 0.5s ease;
    }

    .option-label:hover {
        background: rgba(255, 255, 255, 0.08);
        border-color: rgba(255, 255, 255, 0.2);
        transform: translateY(-1px);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .option-label:hover::before {
        left: 100%;
    }

    .option-input:checked + .option-label {
        background: linear-gradient(135deg, rgba(139, 92, 246, 0.2), rgba(96, 165, 250, 0.2));
        border-color: #a78bfa;
        color: #a78bfa;
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(139, 92, 246, 0.15);
    }

    .option-radio {
        width: 20px;
        height: 20px;
        border: 2px solid rgba(255, 255, 255, 0.3);
        border-radius: 50%;
        margin-right: 0.75rem;
        position: relative;
        flex-shrink: 0;
        transition: all 0.2s ease;
    }

    .option-input:checked + .option-label .option-radio {
        border-color: #a78bfa;
        background: #a78bfa;
    }

    .option-input:checked + .option-label .option-radio::after {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        width: 8px;
        height: 8px;
        background: white;
        border-radius: 50%;
        transform: translate(-50%, -50%);
    }

    .actions-section {
        display: flex;
        justify-content: center;
        gap: 1rem;
        padding-top: 1rem;
        border-top: 1px solid rgba(255, 255, 255, 0.1);
    }

    .btn {
        padding: 0.875rem 2rem;
        border-radius: 12px;
        font-weight: 600;
        font-size: 1rem;
        border: none;
        cursor: pointer;
        transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
        display: inline-flex;
        align-items: center;
        justify-content: center;
        position: relative;
        overflow: hidden;
        text-decoration: none;
    }

    .btn:disabled {
        opacity: 0.5;
        cursor: not-allowed;
    }

    .btn-primary {
        background: linear-gradient(135deg, #60a5fa, #a78bfa);
        color: white;
        box-shadow: 0 4px 14px rgba(139, 92, 246, 0.3);
    }

    .btn-primary:hover:not(:disabled) {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(139, 92, 246, 0.4);
    }

    .btn-primary:active {
        transform: translateY(0);
    }

    .btn-secondary {
        background: rgba(248, 250, 252, 0.1);
        color: #f8fafc;
        border: 2px solid rgba(248, 250, 252, 0.2);
    }

    .btn-secondary:hover {
        background: rgba(248, 250, 252, 0.15);
        border-color: rgba(248, 250, 252, 0.3);
        transform: translateY(-1px);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .progress-indicator {
        width: 100%;
        height: 6px;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 3px;
        margin-bottom: 2rem;
        overflow: hidden;
    }

    .progress-bar {
        height: 100%;
        width: {{ progress }}%;
        background: linear-gradient(90deg, #60a5fa, #a78bfa);
        border-radius: 3px;
        transition: width 0.5s ease;
    }

    .progress-text {
        text-align: center;
        color: #94a3b8;
        font-size: 0.875rem;
        margin-bottom: 1rem;
    }

    @media (max-width: 640px) {
        .quiz-card {
            padding: 2rem 1.5rem;
            margin: 1rem;
        }
        
        .quiz-title {
            font-size: 1.75rem;
        }

        .question-text {
            font-size: 1.125rem;
            flex-direction: column;
            align-items: flex-start;
        }

        .question-number {
            margin-bottom: 0.5rem;
            margin-right: 0;
        }

        .actions-section {
            flex-direction: column;
        }

        .btn {
            width: 100%;
        }
    }

    @media (prefers-reduced-motion: reduce) {
        * {
            animation-duration: 0.01ms !important;
            animation-iteration-count: 1 !important;
            transition-duration: 0.01ms !important;
        }
    }
</style>

<div class="quiz-container">
    <div class="quiz-card">
        <div class="progress-indicator">
            <div class="progress-bar"></div>
        </div>
        <div class="progress-text">
            Question {{ question_number }} of {{ total_questions }}
        </div>
        
        <div class="quiz-header">
            <h1 class="quiz-title"> JPOT Time</h1>
            <p class="quiz-subtitle">{{ question.category }}</p>
            <span class="category-badge">{{ question.category }}</span>
            <span class="difficulty-badge difficulty-{{ question.difficulty }}">
                {{ question.difficulty.title() }}
            </span>
        </div>

        <form method="post" id="questionForm">
            <div class="question-section">
                <h2 class="question-text">
                    <span class="question-number">{{ question_number }}</span>
                    <span>{{ question.question | safe }}</span>
                </h2>

                <div class="options-grid">
                    {% for option in question.options %}
                    <div class="option-wrapper">
                        <input class="option-input" type="radio" name="answer" id="option{{ loop.index }}" value="{{ option }}" required>
                        <label class="option-label" for="option{{ loop.index }}">
                            <div class="option-radio"></div>
                            {{ option | safe }}
                        </label>
                    </div>
                    {% endfor %}
                </div>
            </div>

            <div class="actions-section">
                <button type="submit" class="btn btn-primary" id="submitBtn" disabled>
                    Next Question
                </button>
                <a href="{{ url_for('quiz') }}" class="btn btn-secondary">
                    Exit Quiz
                </a>
            </div>
        </form>
    </div>
</div>

<script>
// Safely get template variables
let questionNumber;
let totalQuestions;
try {
  questionNumber = {{ question_number|default(1)|tojson }};
  totalQuestions = {{ total_questions|default(1)|tojson }};
} catch (e) {
  console.error('Error parsing template variables:', e);
  questionNumber = 1;
  totalQuestions = 1;
}

// Enable submit button when an option is selected
const radioButtons = document.querySelectorAll('input[name="answer"]');
const submitBtn = document.getElementById('submitBtn');

if (radioButtons.length > 0 && submitBtn) {
    radioButtons.forEach(radio => {
        radio.addEventListener('change', function() {
            submitBtn.disabled = false;
            submitBtn.textContent = questionNumber === totalQuestions ? 'Finish Quiz' : 'Next Question';
        });
    });
}

// Form validation
const questionForm = document.getElementById('questionForm');
if (questionForm) {
    questionForm.addEventListener('submit', function(e) {
        const selected = document.querySelector('input[name="answer"]:checked');
        if (!selected) {
            e.preventDefault();
            alert('Please select an answer before proceeding.');
            return false;
        }
    });
}

// Auto-save progress (optional)
let timeSpent = 0;
const timer = setInterval(() => {
    timeSpent++;
}, 1000);

// Clear timer when leaving page
window.addEventListener('beforeunload', () => {
    clearInterval(timer);
});

// Add keyboard navigation
document.addEventListener('keydown', (e) => {
    if (e.target.tagName === 'INPUT' || e.target.tagName === 'TEXTAREA') return;
    
    const options = document.querySelectorAll('input[name="answer"]');
    
    switch(e.key) {
        case '1':
        case '2':
        case '3':
        case '4':
            const optionIndex = parseInt(e.key) - 1;
            if (options[optionIndex]) {
                options[optionIndex].checked = true;
                options[optionIndex].dispatchEvent(new Event('change'));
            }
            break;
        case 'Enter':
            if (submitBtn && !submitBtn.disabled) {
                e.preventDefault();
                submitBtn.click();
            }
            break;
    }
});
</script>


{% endblock %}
